{"version":3,"sources":["webpack:///./node_modules/refractor/lang/processing.js"],"names":["processing","Prism","languages","extend","keyword","operator","insertBefore","constant","type","pattern","alias","module","exports","displayName","aliases"],"mappings":"6FAKA,SAAAA,EAAAC,GACAA,EAAAC,UAAAF,WAAAC,EAAAC,UAAAC,OAAA,SACAC,QAAA,qKACAC,SAAA,8CAEAJ,EAAAC,UAAAI,aAAA,uBAEAC,SAAA,8BACAC,KAAA,CACAC,QAAA,gEACAC,MAAA,cAIAT,EAAAC,UAAAF,WAAA,SAAAS,QAAA,eAEAR,EAAAC,UAAAF,WAAA,cAAAU,MAAA,WAnBAC,EAAAC,QAAAZ,EACAA,EAAAa,YAAA,aACAb,EAAAc,QAAA","file":"react-syntax-highlighter_languages_refractor_processing.0896d60e4a6453ec05d2.js","sourcesContent":["'use strict'\n\nmodule.exports = processing\nprocessing.displayName = 'processing'\nprocessing.aliases = []\nfunction processing(Prism) {\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword: /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  })\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,\n      alias: 'variable'\n    }\n  })\n  // Spaces are allowed between function name and parenthesis\n  Prism.languages.processing['function'].pattern = /\\w+(?=\\s*\\()/\n  // Class-names is not styled by default\n  Prism.languages.processing['class-name'].alias = 'variable'\n}\n"],"sourceRoot":""}