{"version":3,"sources":["webpack://captchan/./node_modules/refractor/lang/js-extras.js"],"names":["jsExtras","Prism","withId","source","flags","RegExp","replace","languages","insertBefore","pattern","javascript","lookbehind","alias","method","imports","inside","exports","unshift","spread","arrow","dom","console","maybeClassNameTokens","i","length","token","value","util","type","module","displayName","aliases"],"mappings":"+FAKA,SAASA,EAASC,IACf,SAAWA,GA0CV,SAASC,EAAOC,EAAQC,GACtB,OAAOC,OACLF,EAAOG,QAAQ,SAAS,WACtB,MAAO,yDAAyDH,UAElEC,GA9CJH,EAAMM,UAAUC,aAAa,aAAc,oBAAqB,CAC9D,kBAAmB,CACjBC,QAASJ,OACP,YACEJ,EAAMM,UAAUG,WAAW,qBAAqBD,QAAQN,QAE5DQ,YAAY,EACZC,MAAO,CAAC,oBAAqB,SAAU,WAAY,sBAGvDX,EAAMM,UAAUC,aAAa,aAAc,WAAY,CACrDK,OAAQ,CACNJ,QAASJ,OACP,YAAcJ,EAAMM,UAAUG,WAAqB,SAAEP,QAEvDQ,YAAY,EACZC,MAAO,CAAC,WAAY,sBAGxBX,EAAMM,UAAUC,aAAa,aAAc,WAAY,CACrD,mBAAoB,CAClB,CAGEC,QAAS,yOACTG,MAAO,cAET,CAEEH,QAAS,wBACTG,MAAO,iBAmBbX,EAAMM,UAAUC,aAAa,aAAc,UAAW,CACpDM,QAAS,CAEPL,QAASP,EACP,4GACGC,QAELQ,YAAY,EACZI,OAAQd,EAAMM,UAAUG,YAE1BM,QAAS,CAEPP,QAASP,EACP,mEACGC,QAELQ,YAAY,EACZI,OAAQd,EAAMM,UAAUG,cAG5BT,EAAMM,UAAUG,WAAoB,QAAEO,QACpC,CACER,QAAS,wCACTG,MAAO,UAET,CACEH,QAAS,gGACTG,MAAO,gBAET,CACEH,QAAS,WACTG,MAAO,CAAC,OAAQ,QAElB,CACEH,QAAS,gBACTG,MAAO,QAGXX,EAAMM,UAAUC,aAAa,aAAc,WAAY,CACrDU,OAAQ,CACNT,QAAS,QACTG,MAAO,YAETO,MAAO,CACLV,QAAS,KACTG,MAAO,cAGXX,EAAMM,UAAUC,aAAa,aAAc,cAAe,CACxD,kBAAmB,CACjBC,QAASP,EAAO,gBAAgBC,QAChCQ,YAAY,GAEd,mBAAoB,CAClBF,QAAS,8CACTE,YAAY,GAEdS,IAAK,CAEHX,QAAS,kFACTG,MAAO,YAETS,QAAS,CACPZ,QAAS,qBACTG,MAAO,gBAUX,IAPA,IAAIU,EAAuB,CACzB,WACA,oBACA,SACA,kBACA,mBAEOC,EAAI,EAAGA,EAAID,EAAqBE,OAAQD,IAAK,CACpD,IAAIE,EAAQH,EAAqBC,GAC7BG,EAAQzB,EAAMM,UAAUG,WAAWe,GACR,WAA3BxB,EAAM0B,KAAKC,KAAKF,KAClBA,EAAQzB,EAAMM,UAAUG,WAAWe,GAAS,CAC1ChB,QAASiB,IAGb,IAAIX,EAASW,EAAMX,QAAU,GAC7BW,EAAMX,OAASA,EACfA,EAAO,oBAAsB,iBAtIhC,CAwIEd,GA5IL4B,EAAOb,QAAUhB,EACjBA,EAAS8B,YAAc,WACvB9B,EAAS+B,QAAU","file":"react-syntax-highlighter_languages_refractor_jsExtras.173889c2b3ab7428dc63.js","sourcesContent":["'use strict'\n\nmodule.exports = jsExtras\njsExtras.displayName = 'jsExtras'\njsExtras.aliases = []\nfunction jsExtras(Prism) {\n  ;(function (Prism) {\n    Prism.languages.insertBefore('javascript', 'function-variable', {\n      'method-variable': {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' +\n            Prism.languages.javascript['function-variable'].pattern.source\n        ),\n        lookbehind: true,\n        alias: ['function-variable', 'method', 'function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'function', {\n      method: {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source\n        ),\n        lookbehind: true,\n        alias: ['function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'constant', {\n      'known-class-name': [\n        {\n          // standard built-ins\n          // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n          pattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n          alias: 'class-name'\n        },\n        {\n          // errors\n          pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n          alias: 'class-name'\n        }\n      ]\n    })\n    /**\n     * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n     *\n     * @param {string} source\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function withId(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source\n        }),\n        flags\n      )\n    }\n    Prism.languages.insertBefore('javascript', 'keyword', {\n      imports: {\n        // https://tc39.es/ecma262/#sec-imports\n        pattern: withId(\n          /(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      exports: {\n        // https://tc39.es/ecma262/#sec-exports\n        pattern: withId(\n          /(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    })\n    Prism.languages.javascript['keyword'].unshift(\n      {\n        pattern: /\\b(?:as|default|export|from|import)\\b/,\n        alias: 'module'\n      },\n      {\n        pattern: /\\b(?:await|break|catch|continue|do|else|for|finally|if|return|switch|throw|try|while|yield)\\b/,\n        alias: 'control-flow'\n      },\n      {\n        pattern: /\\bnull\\b/,\n        alias: ['null', 'nil']\n      },\n      {\n        pattern: /\\bundefined\\b/,\n        alias: 'nil'\n      }\n    )\n    Prism.languages.insertBefore('javascript', 'operator', {\n      spread: {\n        pattern: /\\.{3}/,\n        alias: 'operator'\n      },\n      arrow: {\n        pattern: /=>/,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'punctuation', {\n      'property-access': {\n        pattern: withId(/(\\.\\s*)#?<ID>/.source),\n        lookbehind: true\n      },\n      'maybe-class-name': {\n        pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n        lookbehind: true\n      },\n      dom: {\n        // this contains only a few commonly used DOM variables\n        pattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n        alias: 'variable'\n      },\n      console: {\n        pattern: /\\bconsole(?=\\s*\\.)/,\n        alias: 'class-name'\n      }\n    }) // add 'maybe-class-name' to tokens which might be a class name\n    var maybeClassNameTokens = [\n      'function',\n      'function-variable',\n      'method',\n      'method-variable',\n      'property-access'\n    ]\n    for (var i = 0; i < maybeClassNameTokens.length; i++) {\n      var token = maybeClassNameTokens[i]\n      var value = Prism.languages.javascript[token] // convert regex to object\n      if (Prism.util.type(value) === 'RegExp') {\n        value = Prism.languages.javascript[token] = {\n          pattern: value\n        }\n      } // keep in mind that we don't support arrays\n      var inside = value.inside || {}\n      value.inside = inside\n      inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/\n    }\n  })(Prism)\n}\n"],"sourceRoot":""}