{"version":3,"sources":["webpack:///./node_modules/refractor/lang/scss.js"],"names":["scss","Prism","languages","extend","comment","pattern","lookbehind","atrule","inside","rule","url","selector","parent","alias","placeholder","variable","property","insertBefore","keyword","statement","boolean","null","operator","rest","module","exports","displayName","aliases"],"mappings":"6FAKA,SAAAA,EAAAC,GACAA,EAAAC,UAAAF,KAAAC,EAAAC,UAAAC,OAAA,OACAC,QAAA,CACAC,QAAA,uCACAC,YAAA,GAEAC,OAAA,CACAF,QAAA,0CACAG,OAAA,CACAC,KAAA,YAKAC,IAAA,0BAQAC,SAAA,CAEAN,QAAA,iFACAG,OAAA,CACAI,OAAA,CACAP,QAAA,IACAQ,MAAA,aAEAC,YAAA,UACAC,SAAA,2BAGAC,SAAA,CACAX,QAAA,4CACAG,OAAA,CACAO,SAAA,6BAIAd,EAAAC,UAAAe,aAAA,iBACAC,QAAA,CACA,sGACA,CACAb,QAAA,4BACAC,YAAA,MAIAL,EAAAC,UAAAe,aAAA,oBAEAF,SAAA,2BAEAd,EAAAC,UAAAe,aAAA,mBACAH,YAAA,CACAT,QAAA,UACAQ,MAAA,YAEAM,UAAA,CACAd,QAAA,6BACAQ,MAAA,WAEAO,QAAA,qBACAC,KAAA,CACAhB,QAAA,WACAQ,MAAA,WAEAS,SAAA,CACAjB,QAAA,kDACAC,YAAA,KAGAL,EAAAC,UAAAF,KAAA,OAAAQ,OAAAe,KAAAtB,EAAAC,UAAAF,KA5EAwB,EAAAC,QAAAzB,EACAA,EAAA0B,YAAA,OACA1B,EAAA2B,QAAA","file":"react-syntax-highlighter_languages_refractor_scss.02032c6181511e1c6e36.js","sourcesContent":["'use strict'\n\nmodule.exports = scss\nscss.displayName = 'scss'\nscss.aliases = []\nfunction scss(Prism) {\n  Prism.languages.scss = Prism.languages.extend('css', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    atrule: {\n      pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n      inside: {\n        rule: /@[\\w-]+/\n        // See rest below\n      }\n    },\n    // url, compassified\n    url: /(?:[-a-z]+-)*url(?=\\()/i,\n    // CSS selector regex is not appropriate for Sass\n    // since there can be lot more things (var, @ directive, nesting..)\n    // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n    // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n    // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n    // can \"pass\" as a selector- e.g: proper#{$erty})\n    // this one was hard to do, so please be careful if you edit this one :)\n    selector: {\n      // Initial look-ahead is used to prevent matching of blank selectors\n      pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n      inside: {\n        parent: {\n          pattern: /&/,\n          alias: 'important'\n        },\n        placeholder: /%[-\\w]+/,\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    },\n    property: {\n      pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n      inside: {\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    }\n  })\n  Prism.languages.insertBefore('scss', 'atrule', {\n    keyword: [\n      /@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,\n      {\n        pattern: /( +)(?:from|through)(?= )/,\n        lookbehind: true\n      }\n    ]\n  })\n  Prism.languages.insertBefore('scss', 'important', {\n    // var and interpolated vars\n    variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  })\n  Prism.languages.insertBefore('scss', 'function', {\n    placeholder: {\n      pattern: /%[-\\w]+/,\n      alias: 'selector'\n    },\n    statement: {\n      pattern: /\\B!(?:default|optional)\\b/i,\n      alias: 'keyword'\n    },\n    boolean: /\\b(?:true|false)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    operator: {\n      pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.scss['atrule'].inside.rest = Prism.languages.scss\n}\n"],"sourceRoot":""}