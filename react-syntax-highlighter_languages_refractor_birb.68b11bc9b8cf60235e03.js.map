{"version":3,"sources":["webpack://captchan/./node_modules/refractor/lang/birb.js"],"names":["birb","Prism","languages","extend","string","pattern","greedy","keyword","operator","variable","insertBefore","metadata","alias","module","exports","displayName","aliases"],"mappings":"+FAKA,SAASA,EAAKC,GACZA,EAAMC,UAAUF,KAAOC,EAAMC,UAAUC,OAAO,QAAS,CACrDC,OAAQ,CACNC,QAAS,gCACTC,QAAQ,GAEV,aAAc,CACZ,kCACA,kCAEFC,QAAS,mJACTC,SAAU,+DACVC,SAAU,kBAEZR,EAAMC,UAAUQ,aAAa,OAAQ,WAAY,CAC/CC,SAAU,CACRN,QAAS,QACTC,QAAQ,EACRM,MAAO,YArBbC,EAAOC,QAAUd,EACjBA,EAAKe,YAAc,OACnBf,EAAKgB,QAAU","file":"react-syntax-highlighter_languages_refractor_birb.68b11bc9b8cf60235e03.js","sourcesContent":["'use strict'\n\nmodule.exports = birb\nbirb.displayName = 'birb'\nbirb.aliases = []\nfunction birb(Prism) {\n  Prism.languages.birb = Prism.languages.extend('clike', {\n    string: {\n      pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    'class-name': [\n      /\\b[A-Z](?:[\\d_]*[a-zA-Z]\\w*)?\\b/, // matches variable and function return types (parameters as well).\n      /\\b[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/\n    ],\n    keyword: /\\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|next|new|noSeeb|return|static|switch|throw|var|void|while)\\b/,\n    operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?|:/,\n    variable: /\\b[a-z_]\\w*\\b/\n  })\n  Prism.languages.insertBefore('birb', 'function', {\n    metadata: {\n      pattern: /<\\w+>/,\n      greedy: true,\n      alias: 'symbol'\n    }\n  })\n}\n"],"sourceRoot":""}