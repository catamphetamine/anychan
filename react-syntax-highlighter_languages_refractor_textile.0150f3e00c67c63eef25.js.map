{"version":3,"sources":["webpack:///./node_modules/refractor/lang/textile.js"],"names":["textile","Prism","modifierRegex","source","modifierTokens","css","pattern","inside","rest","languages","class-id","lookbehind","alias","lang","punctuation","extend","phrase","block-tag","RegExp","modifier","tag","list","table","inline","bold","italic","cite","code","inserted","deleted","span","link-ref","string","url","link","text","image","footnote","acronym","comment","mark","phraseInside","nestedPatterns","phraseInlineInside","phraseTableInside","module","exports","displayName","aliases"],"mappings":"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","file":"react-syntax-highlighter_languages_refractor_textile.0150f3e00c67c63eef25.js","sourcesContent":["'use strict'\n\nmodule.exports = textile\ntextile.displayName = 'textile'\ntextile.aliases = []\nfunction textile(Prism) {\n  ;(function(Prism) {\n    // We don't allow for pipes inside parentheses\n    // to not break table pattern |(. foo |). bar |\n    var modifierRegex = /(?:\\([^|)]+\\)|\\[[^\\]]+\\]|\\{[^}]+\\})+/.source\n    var modifierTokens = {\n      css: {\n        pattern: /\\{[^}]+\\}/,\n        inside: {\n          rest: Prism.languages.css\n        }\n      },\n      'class-id': {\n        pattern: /(\\()[^)]+(?=\\))/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      lang: {\n        pattern: /(\\[)[^\\]]+(?=\\])/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n      punctuation: /[\\\\\\/]\\d+|\\S/\n    }\n    var textile = (Prism.languages.textile = Prism.languages.extend('markup', {\n      phrase: {\n        pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n        lookbehind: true,\n        inside: {\n          // h1. Header 1\n          'block-tag': {\n            pattern: RegExp('^[a-z]\\\\w*(?:' + modifierRegex + '|[<>=()])*\\\\.'),\n            inside: {\n              modifier: {\n                pattern: RegExp(\n                  '(^[a-z]\\\\w*)(?:' + modifierRegex + '|[<>=()])+(?=\\\\.)'\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              tag: /^[a-z]\\w*/,\n              punctuation: /\\.$/\n            }\n          },\n          // # List item\n          // * List item\n          list: {\n            pattern: RegExp('^[*#]+(?:' + modifierRegex + ')?\\\\s+.+', 'm'),\n            inside: {\n              modifier: {\n                pattern: RegExp('(^[*#]+)' + modifierRegex),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /^[*#]+/\n            }\n          },\n          // | cell | cell | cell |\n          table: {\n            // Modifiers can be applied to the row: {color:red}.|1|2|3|\n            // or the cell: |{color:red}.1|2|3|\n            pattern: RegExp(\n              '^(?:(?:' +\n                modifierRegex +\n                '|[<>=()^~])+\\\\.\\\\s*)?(?:\\\\|(?:(?:' +\n                modifierRegex +\n                '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+\\\\.)?[^|]*)+\\\\|',\n              'm'\n            ),\n            inside: {\n              modifier: {\n                // Modifiers for rows after the first one are\n                // preceded by a pipe and a line feed\n                pattern: RegExp(\n                  '(^|\\\\|(?:\\\\r?\\\\n|\\\\r)?)(?:' +\n                    modifierRegex +\n                    '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+(?=\\\\.)'\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /\\||^\\./\n            }\n          },\n          inline: {\n            pattern: RegExp(\n              '(\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])(?:' + modifierRegex + ')?.+?\\\\1'\n            ),\n            inside: {\n              // Note: superscripts and subscripts are not handled specifically\n              // *bold*, **bold**\n              bold: {\n                pattern: RegExp(\n                  '(^(\\\\*\\\\*?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'\n                ),\n                lookbehind: true\n              },\n              // _italic_, __italic__\n              italic: {\n                pattern: RegExp('(^(__?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'),\n                lookbehind: true\n              },\n              // ??cite??\n              cite: {\n                pattern: RegExp(\n                  '(^\\\\?\\\\?(?:' + modifierRegex + ')?).+?(?=\\\\?\\\\?)'\n                ),\n                lookbehind: true,\n                alias: 'string'\n              },\n              // @code@\n              code: {\n                pattern: RegExp('(^@(?:' + modifierRegex + ')?).+?(?=@)'),\n                lookbehind: true,\n                alias: 'keyword'\n              },\n              // +inserted+\n              inserted: {\n                pattern: RegExp('(^\\\\+(?:' + modifierRegex + ')?).+?(?=\\\\+)'),\n                lookbehind: true\n              },\n              // -deleted-\n              deleted: {\n                pattern: RegExp('(^-(?:' + modifierRegex + ')?).+?(?=-)'),\n                lookbehind: true\n              },\n              // %span%\n              span: {\n                pattern: RegExp('(^%(?:' + modifierRegex + ')?).+?(?=%)'),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: RegExp(\n                  '(^\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])' + modifierRegex\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /[*_%?@+\\-^~]+/\n            }\n          },\n          // [alias]http://example.com\n          'link-ref': {\n            pattern: /^\\[[^\\]]+\\]\\S+$/m,\n            inside: {\n              string: {\n                pattern: /(\\[)[^\\]]+(?=\\])/,\n                lookbehind: true\n              },\n              url: {\n                pattern: /(\\])\\S+$/,\n                lookbehind: true\n              },\n              punctuation: /[\\[\\]]/\n            }\n          },\n          // \"text\":http://example.com\n          // \"text\":link-ref\n          link: {\n            pattern: RegExp(\n              '\"(?:' + modifierRegex + ')?[^\"]+\":.+?(?=[^\\\\w/]?(?:\\\\s|$))'\n            ),\n            inside: {\n              text: {\n                pattern: RegExp('(^\"(?:' + modifierRegex + ')?)[^\"]+(?=\")'),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: RegExp('(^\")' + modifierRegex),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[\":]/\n            }\n          },\n          // !image.jpg!\n          // !image.jpg(Title)!:http://example.com\n          image: {\n            pattern: RegExp(\n              '!(?:' +\n                modifierRegex +\n                '|[<>=()])*[^!\\\\s()]+(?:\\\\([^)]+\\\\))?!(?::.+?(?=[^\\\\w/]?(?:\\\\s|$)))?'\n            ),\n            inside: {\n              source: {\n                pattern: RegExp(\n                  '(^!(?:' +\n                    modifierRegex +\n                    '|[<>=()])*)[^!\\\\s()]+(?:\\\\([^)]+\\\\))?(?=!)'\n                ),\n                lookbehind: true,\n                alias: 'url'\n              },\n              modifier: {\n                pattern: RegExp('(^!)(?:' + modifierRegex + '|[<>=()])+'),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[!:]/\n            }\n          },\n          // Footnote[1]\n          footnote: {\n            pattern: /\\b\\[\\d+\\]/,\n            alias: 'comment',\n            inside: {\n              punctuation: /\\[|\\]/\n            }\n          },\n          // CSS(Cascading Style Sheet)\n          acronym: {\n            pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n            inside: {\n              comment: {\n                pattern: /(\\()[^)]+(?=\\))/,\n                lookbehind: true\n              },\n              punctuation: /[()]/\n            }\n          },\n          // Prism(C)\n          mark: {\n            pattern: /\\b\\((?:TM|R|C)\\)/,\n            alias: 'comment',\n            inside: {\n              punctuation: /[()]/\n            }\n          }\n        }\n      }\n    }))\n    var phraseInside = textile['phrase'].inside\n    var nestedPatterns = {\n      inline: phraseInside['inline'],\n      link: phraseInside['link'],\n      image: phraseInside['image'],\n      footnote: phraseInside['footnote'],\n      acronym: phraseInside['acronym'],\n      mark: phraseInside['mark']\n    }\n    // Only allow alpha-numeric HTML tags, not XML tags\n    textile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i\n    // Allow some nesting\n    var phraseInlineInside = phraseInside['inline'].inside\n    phraseInlineInside['bold'].inside = nestedPatterns\n    phraseInlineInside['italic'].inside = nestedPatterns\n    phraseInlineInside['inserted'].inside = nestedPatterns\n    phraseInlineInside['deleted'].inside = nestedPatterns\n    phraseInlineInside['span'].inside = nestedPatterns\n    // Allow some styles inside table cells\n    var phraseTableInside = phraseInside['table'].inside\n    phraseTableInside['inline'] = nestedPatterns['inline']\n    phraseTableInside['link'] = nestedPatterns['link']\n    phraseTableInside['image'] = nestedPatterns['image']\n    phraseTableInside['footnote'] = nestedPatterns['footnote']\n    phraseTableInside['acronym'] = nestedPatterns['acronym']\n    phraseTableInside['mark'] = nestedPatterns['mark']\n  })(Prism)\n}\n"],"sourceRoot":""}