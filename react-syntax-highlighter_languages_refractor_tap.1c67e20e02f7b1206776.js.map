{"version":3,"sources":["webpack://captchan/./node_modules/refractor/lang/tap.js","webpack://captchan/./node_modules/refractor/lang/yaml.js"],"names":["refractorYaml","tap","Prism","register","languages","fail","pass","pragma","bailout","version","plan","subtest","pattern","greedy","punctuation","directive","yamlish","lookbehind","inside","yaml","alias","module","exports","displayName","aliases","anchorOrAlias","tag","properties","source","createValuePattern","value","flags","replace","RegExp","scalar","comment","key","datetime","boolean","null","string","number","important","yml"],"mappings":"0GACA,IAAIA,EAAgB,EAAQ,OAI5B,SAASC,EAAIC,GACXA,EAAMC,SAASH,GACfE,EAAME,UAAUH,IAAM,CACpBI,KAAM,mBACNC,KAAM,eACNC,OAAQ,oBACRC,QAAS,eACTC,QAAS,mBACTC,KAAM,uBACNC,QAAS,CACPC,QAAS,qBACTC,QAAQ,GAEVC,YAAa,OACbC,UAAW,MACXC,QAAS,CACPJ,QAAS,qEACTK,YAAY,EACZC,OAAQhB,EAAME,UAAUe,KACxBC,MAAO,kBAtBbC,EAAOC,QAAUrB,EACjBA,EAAIsB,YAAc,MAClBtB,EAAIuB,QAAU,I,uBCCd,SAASL,EAAKjB,IACX,SAAWA,GAGV,IAAIuB,EAAgB,mBAChBC,EAAM,mFACNC,EACF,MACAD,EAAIE,OACJ,YACAH,EAAcG,OACd,MACAH,EAAcG,OACd,YACAF,EAAIE,OACJ,MAOF,SAASC,EAAmBC,EAAOC,GACjCA,GAASA,GAAS,IAAIC,QAAQ,KAAM,IAAM,IAC1C,IAAIpB,EAAU,4EAA4EgB,OACvFI,QAAQ,aAAa,WACpB,OAAOL,KAERK,QAAQ,cAAc,WACrB,OAAOF,KAEX,OAAOG,OAAOrB,EAASmB,GAEzB7B,EAAME,UAAUe,KAAO,CACrBe,OAAQ,CACNtB,QAASqB,OACP,2FAA2FL,OAAOI,QAChG,aACA,WACE,OAAOL,MAIbV,YAAY,EACZG,MAAO,UAETe,QAAS,MACTC,IAAK,CACHxB,QAASqB,OACP,6EAA6EL,OAAOI,QAClF,aACA,WACE,OAAOL,MAIbV,YAAY,EACZG,MAAO,UAETL,UAAW,CACTH,QAAS,gBACTK,YAAY,EACZG,MAAO,aAETiB,SAAU,CACRzB,QAASiB,EACP,kJACGD,QAELX,YAAY,EACZG,MAAO,UAETkB,QAAS,CACP1B,QAASiB,EAAmB,aAAaD,OAAQ,KACjDX,YAAY,EACZG,MAAO,aAETmB,KAAM,CACJ3B,QAASiB,EAAmB,SAASD,OAAQ,KAC7CX,YAAY,EACZG,MAAO,aAEToB,OAAQ,CAEN5B,QAASiB,EAAmB,kCAAkCD,QAC9DX,YAAY,EACZJ,QAAQ,GAEV4B,OAAQ,CACN7B,QAASiB,EACP,8EACGD,OACH,KAEFX,YAAY,GAEdS,IAAKA,EACLgB,UAAWjB,EACXX,YAAa,6BAEfZ,EAAME,UAAUuC,IAAMzC,EAAME,UAAUe,KAnGvC,CAoGEjB,GAxGLmB,EAAOC,QAAUH,EACjBA,EAAKI,YAAc,OACnBJ,EAAKK,QAAU,CAAC","file":"react-syntax-highlighter_languages_refractor_tap.1c67e20e02f7b1206776.js","sourcesContent":["'use strict'\nvar refractorYaml = require('./yaml.js')\nmodule.exports = tap\ntap.displayName = 'tap'\ntap.aliases = []\nfunction tap(Prism) {\n  Prism.register(refractorYaml)\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[^\\S\\r\\n]*)---(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?[^\\S\\r\\n]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = yaml\nyaml.displayName = 'yaml'\nyaml.aliases = ['yml']\nfunction yaml(Prism) {\n  ;(function (Prism) {\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/ // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n    var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/ // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n    var properties =\n      '(?:' +\n      tag.source +\n      '(?:[ \\t]+' +\n      anchorOrAlias.source +\n      ')?|' +\n      anchorOrAlias.source +\n      '(?:[ \\t]+' +\n      tag.source +\n      ')?)'\n    /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function createValuePattern(value, flags) {\n      flags = (flags || '').replace(/m/g, '') + 'm' // add m flag\n      var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|]|}|\\s*#))/.source\n        .replace(/<<prop>>/g, function () {\n          return properties\n        })\n        .replace(/<<value>>/g, function () {\n          return value\n        })\n      return RegExp(pattern, flags)\n    }\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: RegExp(\n          /([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/.source.replace(\n            /<<prop>>/g,\n            function () {\n              return properties\n            }\n          )\n        ),\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: RegExp(\n          /((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/.source.replace(\n            /<<prop>>/g,\n            function () {\n              return properties\n            }\n          )\n        ),\n        lookbehind: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: createValuePattern(\n          /\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/\n            .source\n        ),\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: createValuePattern(/true|false/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: createValuePattern(/null|~/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        // \\2 because of the lookbehind group\n        pattern: createValuePattern(/(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2/.source),\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: createValuePattern(\n          /[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      tag: tag,\n      important: anchorOrAlias,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    }\n    Prism.languages.yml = Prism.languages.yaml\n  })(Prism)\n}\n"],"sourceRoot":""}