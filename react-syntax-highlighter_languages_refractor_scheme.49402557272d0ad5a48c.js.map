{"version":3,"sources":["webpack:///./node_modules/refractor/lang/scheme.js"],"names":["scheme","Prism","languages","comment","string","pattern","greedy","character","alias","keyword","lookbehind","builtin","number","boolean","operator","function","punctuation","module","exports","displayName","aliases"],"mappings":"6FAKA,SAAAA,EAAAC,GACAA,EAAAC,UAAAF,OAAA,CACAG,QAAA,MACAC,OAAA,CACAC,QAAA,gCACAC,QAAA,GAEAC,UAAA,CACAF,QAAA,sCACAG,MAAA,UAEAC,QAAA,CACAJ,QAAA,8LACAK,YAAA,GAEAC,QAAA,CACAN,QAAA,0NACAK,YAAA,GAEAE,OAAA,CACAP,QAAA,oDACAK,YAAA,GAEAG,QAAA,QACAC,SAAA,CACAT,QAAA,sCACAK,YAAA,GAEAK,SAAA,CACAV,QAAA,6BACAK,YAAA,GAEAM,YAAA,SAnCAC,EAAAC,QAAAlB,EACAA,EAAAmB,YAAA,SACAnB,EAAAoB,QAAA","file":"react-syntax-highlighter_languages_refractor_scheme.49402557272d0ad5a48c.js","sourcesContent":["'use strict'\n\nmodule.exports = scheme\nscheme.displayName = 'scheme'\nscheme.aliases = []\nfunction scheme(Prism) {\n  Prism.languages.scheme = {\n    comment: /;.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|'[^()#'\\s]+/,\n      greedy: true\n    },\n    character: {\n      pattern: /#\\\\(?:[ux][a-fA-F\\d]+|[a-zA-Z]+|\\S)/,\n      alias: 'string'\n    },\n    keyword: {\n      pattern: /(\\()(?:define(?:-syntax|-library|-values)?|(?:case-)?lambda|let(?:\\*|rec)?(?:-values)?|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-rules)(?=[()\\s])/,\n      lookbehind: true\n    },\n    builtin: {\n      pattern: /(\\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\\/cc|append|abs|apply|eval)\\b|null\\?|pair\\?|boolean\\?|eof-object\\?|char\\?|procedure\\?|number\\?|port\\?|string\\?|vector\\?|symbol\\?|bytevector\\?)(?=[()\\s])/,\n      lookbehind: true\n    },\n    number: {\n      pattern: /([\\s()])[-+]?\\d*\\.?\\d+(?:\\s*[-+]\\s*\\d*\\.?\\d+i)?\\b/,\n      lookbehind: true\n    },\n    boolean: /#[tf]/,\n    operator: {\n      pattern: /(\\()(?:[-+*%\\/]|[<>]=?|=>?)(?=\\s|$)/,\n      lookbehind: true\n    },\n    function: {\n      pattern: /(\\()[^()'\\s]+(?=[()\\s)]|$)/,\n      lookbehind: true\n    },\n    punctuation: /[()']/\n  }\n}\n"],"sourceRoot":""}