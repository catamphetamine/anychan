{"version":3,"sources":["webpack:///./node_modules/refractor/lang/coffeescript.js"],"names":["coffeescript","Prism","comment","interpolation","pattern","alias","languages","extend","string","greedy","inside","keyword","class-member","insertBefore","multiline-comment","block-regex","inline-javascript","delimiter","rest","javascript","multiline-string","property","coffee","module","exports","displayName","aliases"],"mappings":"4FAKA,SAAAA,EAAAC,IACG,SAAAA,GAEH,IAAAC,EAAA,YACAC,EAAA,CACAC,QAAA,aACAC,MAAA,YAEAJ,EAAAK,UAAAN,aAAAC,EAAAK,UAAAC,OAAA,cACAL,UACAM,OAAA,CAEA,CACAJ,QAAA,yBACAK,QAAA,GAEA,CAEAL,QAAA,yBACAK,QAAA,EACAC,OAAA,CACAP,mBAIAQ,QAAA,mSACAC,eAAA,CACAR,QAAA,aACAC,MAAA,cAGAJ,EAAAK,UAAAO,aAAA,0BACAC,oBAAA,CACAV,QAAA,iBACAC,MAAA,WAGAU,cAAA,CACAX,QAAA,qBACAC,MAAA,QACAK,OAAA,CACAR,UACAC,oBAIAF,EAAAK,UAAAO,aAAA,yBACAG,oBAAA,CACAZ,QAAA,yBACAM,OAAA,CACAO,UAAA,CACAb,QAAA,QACAC,MAAA,eAEAa,KAAAjB,EAAAK,UAAAa,aAIAC,mBAAA,CACA,CACAhB,QAAA,iBACAK,QAAA,EACAJ,MAAA,UAEA,CACAD,QAAA,iBACAK,QAAA,EACAJ,MAAA,SACAK,OAAA,CACAP,qBAKAF,EAAAK,UAAAO,aAAA,0BAEAQ,SAAA,kCAEApB,EAAAK,UAAAN,aAAA,mBACAC,EAAAK,UAAAgB,OAAArB,EAAAK,UAAAN,aA9EG,CA+EAC,GAnFHsB,EAAAC,QAAAxB,EACAA,EAAAyB,YAAA,eACAzB,EAAA0B,QAAA","file":"react-syntax-highlighter_languages_refractor_coffeescript.97773fccb55dcf30913f.js","sourcesContent":["'use strict'\n\nmodule.exports = coffeescript\ncoffeescript.displayName = 'coffeescript'\ncoffeescript.aliases = ['coffee']\nfunction coffeescript(Prism) {\n  ;(function(Prism) {\n    // Ignore comments starting with { to privilege string interpolation highlighting\n    var comment = /#(?!\\{).+/,\n      interpolation = {\n        pattern: /#\\{[^}]+\\}/,\n        alias: 'variable'\n      }\n    Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n      comment: comment,\n      string: [\n        // Strings are multiline\n        {\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n          greedy: true\n        },\n        {\n          // Strings are multiline\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ],\n      keyword: /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n      'class-member': {\n        pattern: /@(?!\\d)\\w+/,\n        alias: 'variable'\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'comment', {\n      'multiline-comment': {\n        pattern: /###[\\s\\S]+?###/,\n        alias: 'comment'\n      },\n      // Block regexp can contain comments and interpolation\n      'block-regex': {\n        pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n        alias: 'regex',\n        inside: {\n          comment: comment,\n          interpolation: interpolation\n        }\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'string', {\n      'inline-javascript': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        inside: {\n          delimiter: {\n            pattern: /^`|`$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      // Block strings\n      'multiline-string': [\n        {\n          pattern: /'''[\\s\\S]*?'''/,\n          greedy: true,\n          alias: 'string'\n        },\n        {\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ]\n    })\n    Prism.languages.insertBefore('coffeescript', 'keyword', {\n      // Object property\n      property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n    })\n    delete Prism.languages.coffeescript['template-string']\n    Prism.languages.coffee = Prism.languages.coffeescript\n  })(Prism)\n}\n"],"sourceRoot":""}