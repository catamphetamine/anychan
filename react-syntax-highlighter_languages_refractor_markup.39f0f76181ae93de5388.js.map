{"version":3,"sources":["webpack://captchan/./node_modules/refractor/lang/markup.js"],"names":["markup","Prism","languages","comment","prolog","doctype","pattern","greedy","inside","lookbehind","string","punctuation","name","cdata","tag","namespace","alias","entity","hooks","add","env","type","attributes","content","value","replace","Object","defineProperty","tagName","lang","includedCdataInside","def","RegExp","source","insertBefore","html","mathml","svg","xml","extend","ssml","atom","rss","module","exports","displayName","aliases"],"mappings":"8FAKA,SAASA,EAAOC,GACdA,EAAMC,UAAUF,OAAS,CACvBG,QAAS,kBACTC,OAAQ,iBACRC,QAAS,CAEPC,QAAS,uHACTC,QAAQ,EACRC,OAAQ,CACN,kBAAmB,CACjBF,QAAS,sBACTG,YAAY,EACZF,QAAQ,EACRC,OAAQ,MAEVE,OAAQ,CACNJ,QAAS,kBACTC,QAAQ,GAEVI,YAAa,eACb,cAAe,WACfC,KAAM,eAGVC,MAAO,0BACPC,IAAK,CACHR,QAAS,uHACTC,QAAQ,EACRC,OAAQ,CACNM,IAAK,CACHR,QAAS,iBACTE,OAAQ,CACNG,YAAa,QACbI,UAAW,iBAGf,aAAc,CACZT,QAAS,qCACTE,OAAQ,CACNG,YAAa,CACX,CACEL,QAAS,KACTU,MAAO,eAET,SAINL,YAAa,OACb,YAAa,CACXL,QAAS,YACTE,OAAQ,CACNO,UAAW,mBAKnBE,OAAQ,CACN,CACEX,QAAS,kBACTU,MAAO,gBAET,uBAGJf,EAAMC,UAAUF,OAAY,IAAEQ,OAAO,cAAcA,OAAe,OAChEP,EAAMC,UAAUF,OAAe,OACjCC,EAAMC,UAAUF,OAAgB,QAAEQ,OAAO,mBAAmBA,OAC1DP,EAAMC,UAAUF,OAClBC,EAAMiB,MAAMC,IAAI,QAAQ,SAAUC,GACf,WAAbA,EAAIC,OACND,EAAIE,WAAkB,MAAIF,EAAIG,QAAQC,MAAMC,QAAQ,QAAS,SAGjEC,OAAOC,eAAe1B,EAAMC,UAAUF,OAAOc,IAAK,aAAc,CAY9DU,MAAO,SAAoBI,EAASC,GAClC,IAAIC,EAAsB,GAC1BA,EAAoB,YAAcD,GAAQ,CACxCvB,QAAS,oCACTG,YAAY,EACZD,OAAQP,EAAMC,UAAU2B,IAE1BC,EAA2B,MAAI,uBAC/B,IAAItB,EAAS,CACX,iBAAkB,CAChBF,QAAS,4BACTE,OAAQsB,IAGZtB,EAAO,YAAcqB,GAAQ,CAC3BvB,QAAS,UACTE,OAAQP,EAAMC,UAAU2B,IAE1B,IAAIE,EAAM,GACVA,EAAIH,GAAW,CACbtB,QAAS0B,OACP,wFAAwFC,OAAOR,QAC7F,OACA,WACE,OAAOG,KAGX,KAEFnB,YAAY,EACZF,QAAQ,EACRC,OAAQA,GAEVP,EAAMC,UAAUgC,aAAa,SAAU,QAASH,MAGpD9B,EAAMC,UAAUiC,KAAOlC,EAAMC,UAAUF,OACvCC,EAAMC,UAAUkC,OAASnC,EAAMC,UAAUF,OACzCC,EAAMC,UAAUmC,IAAMpC,EAAMC,UAAUF,OACtCC,EAAMC,UAAUoC,IAAMrC,EAAMC,UAAUqC,OAAO,SAAU,IACvDtC,EAAMC,UAAUsC,KAAOvC,EAAMC,UAAUoC,IACvCrC,EAAMC,UAAUuC,KAAOxC,EAAMC,UAAUoC,IACvCrC,EAAMC,UAAUwC,IAAMzC,EAAMC,UAAUoC,IAnIxCK,EAAOC,QAAU5C,EACjBA,EAAO6C,YAAc,SACrB7C,EAAO8C,QAAU,CAAC,OAAQ,SAAU,MAAO,MAAO,OAAQ,OAAQ","file":"react-syntax-highlighter_languages_refractor_markup.39f0f76181ae93de5388.js","sourcesContent":["'use strict'\n\nmodule.exports = markup\nmarkup.displayName = 'markup'\nmarkup.aliases = ['html', 'mathml', 'svg', 'xml', 'ssml', 'atom', 'rss']\nfunction markup(Prism) {\n  Prism.languages.markup = {\n    comment: /<!--[\\s\\S]*?-->/,\n    prolog: /<\\?[\\s\\S]+?\\?>/,\n    doctype: {\n      // https://www.w3.org/TR/xml/#NT-doctypedecl\n      pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n      greedy: true,\n      inside: {\n        'internal-subset': {\n          pattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n        },\n        string: {\n          pattern: /\"[^\"]*\"|'[^']*'/,\n          greedy: true\n        },\n        punctuation: /^<!|>$|[[\\]]/,\n        'doctype-tag': /^DOCTYPE/,\n        name: /[^\\s<>'\"]+/\n      }\n    },\n    cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n    tag: {\n      pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n          inside: {\n            punctuation: [\n              {\n                pattern: /^=/,\n                alias: 'attr-equals'\n              },\n              /\"|'/\n            ]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: [\n      {\n        pattern: /&[\\da-z]{1,8};/i,\n        alias: 'named-entity'\n      },\n      /&#x?[\\da-f]{1,8};/i\n    ]\n  }\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n    Prism.languages.markup['entity']\n  Prism.languages.markup['doctype'].inside['internal-subset'].inside =\n    Prism.languages.markup // Plugin to make entity title show the real entity, idea by Roman Komarov\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n    /**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */\n    value: function addInlined(tagName, lang) {\n      var includedCdataInside = {}\n      includedCdataInside['language-' + lang] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[lang]\n      }\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i\n      var inside = {\n        'included-cdata': {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: includedCdataInside\n        }\n      }\n      inside['language-' + lang] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[lang]\n      }\n      var def = {}\n      def[tagName] = {\n        pattern: RegExp(\n          /(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(\n            /__/g,\n            function () {\n              return tagName\n            }\n          ),\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: inside\n      }\n      Prism.languages.insertBefore('markup', 'cdata', def)\n    }\n  })\n  Prism.languages.html = Prism.languages.markup\n  Prism.languages.mathml = Prism.languages.markup\n  Prism.languages.svg = Prism.languages.markup\n  Prism.languages.xml = Prism.languages.extend('markup', {})\n  Prism.languages.ssml = Prism.languages.xml\n  Prism.languages.atom = Prism.languages.xml\n  Prism.languages.rss = Prism.languages.xml\n}\n"],"sourceRoot":""}