{"version":3,"sources":["webpack://captchan/./node_modules/refractor/lang/yaml.js"],"names":["yaml","Prism","anchorOrAlias","tag","properties","source","plainKey","replace","string","createValuePattern","value","flags","pattern","RegExp","languages","scalar","lookbehind","alias","comment","key","greedy","directive","datetime","boolean","null","number","important","punctuation","yml","module","exports","displayName","aliases"],"mappings":"+FAKA,SAASA,EAAKC,IACX,SAAWA,GAGV,IAAIC,EAAgB,mBAChBC,EAAM,mFACNC,EACF,MACAD,EAAIE,OACJ,YACAH,EAAcG,OACd,MACAH,EAAcG,OACd,YACAF,EAAIE,OACJ,MAGEC,EAAW,kJAAkJD,OAAOE,QACtK,YACA,WACE,MAAO,2EACJF,UAGHG,EAAS,8CAA8CH,OAO3D,SAASI,EAAmBC,EAAOC,GACjCA,GAASA,GAAS,IAAIJ,QAAQ,KAAM,IAAM,IAC1C,IAAIK,EAAU,uFAAuFP,OAClGE,QAAQ,aAAa,WACpB,OAAOH,KAERG,QAAQ,cAAc,WACrB,OAAOG,KAEX,OAAOG,OAAOD,EAASD,GAEzBV,EAAMa,UAAUd,KAAO,CACrBe,OAAQ,CACNH,QAASC,OACP,6FAA6FR,OAAOE,QAClG,aACA,WACE,OAAOH,MAIbY,YAAY,EACZC,MAAO,UAETC,QAAS,MACTC,IAAK,CACHP,QAASC,OACP,kEAAkER,OAC/DE,QAAQ,aAAa,WACpB,OAAOH,KAERG,QAAQ,YAAY,WACnB,MAAO,MAAQD,EAAW,IAAME,EAAS,QAG/CQ,YAAY,EACZI,QAAQ,EACRH,MAAO,UAETI,UAAW,CACTT,QAAS,gBACTI,YAAY,EACZC,MAAO,aAETK,SAAU,CACRV,QAASH,EACP,sJACGJ,QAELW,YAAY,EACZC,MAAO,UAETM,QAAS,CACPX,QAASH,EAAmB,aAAaJ,OAAQ,KACjDW,YAAY,EACZC,MAAO,aAETO,KAAM,CACJZ,QAASH,EAAmB,SAASJ,OAAQ,KAC7CW,YAAY,EACZC,MAAO,aAETT,OAAQ,CACNI,QAASH,EAAmBD,GAC5BQ,YAAY,EACZI,QAAQ,GAEVK,OAAQ,CACNb,QAASH,EACP,kFACGJ,OACH,KAEFW,YAAY,GAEdb,IAAKA,EACLuB,UAAWxB,EACXyB,YAAa,6BAEf1B,EAAMa,UAAUc,IAAM3B,EAAMa,UAAUd,KA9GvC,CA+GEC,GAnHL4B,EAAOC,QAAU9B,EACjBA,EAAK+B,YAAc,OACnB/B,EAAKgC,QAAU,CAAC","file":"react-syntax-highlighter_languages_refractor_yaml.4fdf905412c4da9887f1.js","sourcesContent":["'use strict'\n\nmodule.exports = yaml\nyaml.displayName = 'yaml'\nyaml.aliases = ['yml']\nfunction yaml(Prism) {\n  ;(function (Prism) {\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/ // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n    var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/ // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n    var properties =\n      '(?:' +\n      tag.source +\n      '(?:[ \\t]+' +\n      anchorOrAlias.source +\n      ')?|' +\n      anchorOrAlias.source +\n      '(?:[ \\t]+' +\n      tag.source +\n      ')?)' // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n    // This is a simplified version that doesn't support \"#\" and multiline keys\n    // All these long scarry character classes are simplified versions of YAML's characters\n    var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(\n      /<PLAIN>/g,\n      function () {\n        return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/\n          .source\n      }\n    )\n    var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source\n    /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function createValuePattern(value, flags) {\n      flags = (flags || '').replace(/m/g, '') + 'm' // add m flag\n      var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|]|}|(?:[\\r\\n]\\s*)?#))/.source\n        .replace(/<<prop>>/g, function () {\n          return properties\n        })\n        .replace(/<<value>>/g, function () {\n          return value\n        })\n      return RegExp(pattern, flags)\n    }\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: RegExp(\n          /([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(\n            /<<prop>>/g,\n            function () {\n              return properties\n            }\n          )\n        ),\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: RegExp(\n          /((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source\n            .replace(/<<prop>>/g, function () {\n              return properties\n            })\n            .replace(/<<key>>/g, function () {\n              return '(?:' + plainKey + '|' + string + ')'\n            })\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: createValuePattern(\n          /\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/\n            .source\n        ),\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: createValuePattern(/true|false/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: createValuePattern(/null|~/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        pattern: createValuePattern(string),\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: createValuePattern(\n          /[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      tag: tag,\n      important: anchorOrAlias,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    }\n    Prism.languages.yml = Prism.languages.yaml\n  })(Prism)\n}\n"],"sourceRoot":""}