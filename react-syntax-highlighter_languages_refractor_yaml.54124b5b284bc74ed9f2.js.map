{"version":3,"sources":["webpack://captchan/./node_modules/refractor/lang/yaml.js"],"names":["yaml","Prism","anchorOrAlias","tag","properties","source","createValuePattern","value","flags","replace","pattern","RegExp","languages","scalar","lookbehind","alias","comment","key","directive","datetime","boolean","null","string","greedy","number","important","punctuation","yml","module","exports","displayName","aliases"],"mappings":"+FAKA,SAASA,EAAKC,IACX,SAAWA,GAGV,IAAIC,EAAgB,mBAChBC,EAAM,mFACNC,EACF,MACAD,EAAIE,OACJ,YACAH,EAAcG,OACd,MACAH,EAAcG,OACd,YACAF,EAAIE,OACJ,MAOF,SAASC,EAAmBC,EAAOC,GACjCA,GAASA,GAAS,IAAIC,QAAQ,KAAM,IAAM,IAC1C,IAAIC,EAAU,4EAA4EL,OACvFI,QAAQ,aAAa,WACpB,OAAOL,KAERK,QAAQ,cAAc,WACrB,OAAOF,KAEX,OAAOI,OAAOD,EAASF,GAEzBP,EAAMW,UAAUZ,KAAO,CACrBa,OAAQ,CACNH,QAASC,OACP,2FAA2FN,OAAOI,QAChG,aACA,WACE,OAAOL,MAIbU,YAAY,EACZC,MAAO,UAETC,QAAS,MACTC,IAAK,CACHP,QAASC,OACP,6EAA6EN,OAAOI,QAClF,aACA,WACE,OAAOL,MAIbU,YAAY,EACZC,MAAO,UAETG,UAAW,CACTR,QAAS,gBACTI,YAAY,EACZC,MAAO,aAETI,SAAU,CACRT,QAASJ,EACP,kJACGD,QAELS,YAAY,EACZC,MAAO,UAETK,QAAS,CACPV,QAASJ,EAAmB,aAAaD,OAAQ,KACjDS,YAAY,EACZC,MAAO,aAETM,KAAM,CACJX,QAASJ,EAAmB,SAASD,OAAQ,KAC7CS,YAAY,EACZC,MAAO,aAETO,OAAQ,CAENZ,QAASJ,EAAmB,kCAAkCD,QAC9DS,YAAY,EACZS,QAAQ,GAEVC,OAAQ,CACNd,QAASJ,EACP,8EACGD,OACH,KAEFS,YAAY,GAEdX,IAAKA,EACLsB,UAAWvB,EACXwB,YAAa,6BAEfzB,EAAMW,UAAUe,IAAM1B,EAAMW,UAAUZ,KAnGvC,CAoGEC,GAxGL2B,EAAOC,QAAU7B,EACjBA,EAAK8B,YAAc,OACnB9B,EAAK+B,QAAU,CAAC","file":"react-syntax-highlighter_languages_refractor_yaml.54124b5b284bc74ed9f2.js","sourcesContent":["'use strict'\n\nmodule.exports = yaml\nyaml.displayName = 'yaml'\nyaml.aliases = ['yml']\nfunction yaml(Prism) {\n  ;(function (Prism) {\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/ // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n    var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/ // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n    var properties =\n      '(?:' +\n      tag.source +\n      '(?:[ \\t]+' +\n      anchorOrAlias.source +\n      ')?|' +\n      anchorOrAlias.source +\n      '(?:[ \\t]+' +\n      tag.source +\n      ')?)'\n    /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function createValuePattern(value, flags) {\n      flags = (flags || '').replace(/m/g, '') + 'm' // add m flag\n      var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|]|}|\\s*#))/.source\n        .replace(/<<prop>>/g, function () {\n          return properties\n        })\n        .replace(/<<value>>/g, function () {\n          return value\n        })\n      return RegExp(pattern, flags)\n    }\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: RegExp(\n          /([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/.source.replace(\n            /<<prop>>/g,\n            function () {\n              return properties\n            }\n          )\n        ),\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: RegExp(\n          /((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/.source.replace(\n            /<<prop>>/g,\n            function () {\n              return properties\n            }\n          )\n        ),\n        lookbehind: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: createValuePattern(\n          /\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/\n            .source\n        ),\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: createValuePattern(/true|false/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: createValuePattern(/null|~/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        // \\2 because of the lookbehind group\n        pattern: createValuePattern(/(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2/.source),\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: createValuePattern(\n          /[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      tag: tag,\n      important: anchorOrAlias,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    }\n    Prism.languages.yml = Prism.languages.yaml\n  })(Prism)\n}\n"],"sourceRoot":""}