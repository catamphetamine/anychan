{"version":3,"sources":["webpack:///./node_modules/refractor/lang/nix.js"],"names":["nix","Prism","languages","comment","string","pattern","greedy","inside","interpolation","lookbehind","antiquotation","alias","url","number","keyword","function","boolean","operator","punctuation","rest","module","exports","displayName","aliases"],"mappings":"4FAKA,SAAAA,EAAAC,GACAA,EAAAC,UAAAF,IAAA,CACAG,QAAA,uBACAC,OAAA,CACAC,QAAA,+DACAC,QAAA,EACAC,OAAA,CACAC,cAAA,CAEAH,QAAA,iDACAI,YAAA,EACAF,OAAA,CACAG,cAAA,CACAL,QAAA,YACAM,MAAA,gBAOAC,IAAA,CACA,0CACA,CACAP,QAAA,oFACAI,YAAA,IAGAC,cAAA,CACAL,QAAA,WACAM,MAAA,YAEAE,OAAA,UACAC,QAAA,mEACAC,SAAA,mgBACAC,QAAA,qBACAC,SAAA,uCACAC,YAAA,iBAEAjB,EAAAC,UAAAF,IAAAI,OAAAG,OAAAC,cAAAD,OAAAY,KACAlB,EAAAC,UAAAF,IA3CAoB,EAAAC,QAAArB,EACAA,EAAAsB,YAAA,MACAtB,EAAAuB,QAAA","file":"react-syntax-highlighter_languages_refractor_nix.e7f78ae539ed40259f4f.js","sourcesContent":["'use strict'\n\nmodule.exports = nix\nnix.displayName = 'nix'\nnix.aliases = []\nfunction nix(Prism) {\n  Prism.languages.nix = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // The lookbehind ensures the ${} is not preceded by \\ or ''\n          pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^}]|\\{[^}]*\\})*}/,\n          lookbehind: true,\n          inside: {\n            antiquotation: {\n              pattern: /^\\$(?=\\{)/,\n              alias: 'variable'\n              // See rest below\n            }\n          }\n        }\n      }\n    },\n    url: [\n      /\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/,\n      {\n        pattern: /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n        lookbehind: true\n      }\n    ],\n    antiquotation: {\n      pattern: /\\$(?=\\{)/,\n      alias: 'variable'\n    },\n    number: /\\b\\d+\\b/,\n    keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n    function: /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:url|Tarball)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n    boolean: /\\b(?:true|false)\\b/,\n    operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n    punctuation: /[{}()[\\].,:;]/\n  }\n  Prism.languages.nix.string.inside.interpolation.inside.rest =\n    Prism.languages.nix\n}\n"],"sourceRoot":""}