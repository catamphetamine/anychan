{"version":3,"sources":["webpack://captchan/./node_modules/refractor/lang/agda.js"],"names":["agda","Prism","languages","comment","string","pattern","greedy","punctuation","lookbehind","function","operator","keyword","module","exports","displayName","aliases"],"mappings":"+FAKA,SAASA,EAAKC,IACX,SAAWA,GACVA,EAAMC,UAAUF,KAAO,CACrBG,QAAS,4BACTC,OAAQ,CACNC,QAAS,sCACTC,QAAQ,GAEVC,YAAa,cACb,aAAc,CACZF,QAAS,yBACTG,YAAY,GAEdC,SAAU,CACRJ,QAAS,4BACTG,YAAY,GAEdE,SAAU,CACRL,QAAS,qCACTG,YAAY,GAEdG,QAAS,wWApBZ,CAsBEV,GA1BLW,EAAOC,QAAUb,EACjBA,EAAKc,YAAc,OACnBd,EAAKe,QAAU","file":"react-syntax-highlighter_languages_refractor_agda.76b1776cd97654d851b1.js","sourcesContent":["'use strict'\n\nmodule.exports = agda\nagda.displayName = 'agda'\nagda.aliases = []\nfunction agda(Prism) {\n  ;(function (Prism) {\n    Prism.languages.agda = {\n      comment: /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\n      string: {\n        pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      punctuation: /[(){}⦃⦄.;@]/,\n      'class-name': {\n        pattern: /((?:data|record) +)\\S+/,\n        lookbehind: true\n      },\n      function: {\n        pattern: /(^[ \\t]*)[^:\\r\\n]+?(?=:)/m,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\n        lookbehind: true\n      },\n      keyword: /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/\n    }\n  })(Prism)\n}\n"],"sourceRoot":""}