{"version":3,"sources":["webpack:///./node_modules/refractor/lang/twig.js"],"names":["twig","Prism","languages","comment","tag","pattern","inside","ld","punctuation","keyword","rd","string","boolean","number","operator","lookbehind","property","other","markup","module","exports","displayName","aliases"],"mappings":"6FAKA,SAAAA,EAAAC,GACAA,EAAAC,UAAAF,KAAA,CACAG,QAAA,iBACAC,IAAA,CACAC,QAAA,kCACAC,OAAA,CACAC,GAAA,CACAF,QAAA,0BACAC,OAAA,CACAE,YAAA,kBACAC,QAAA,QAGAC,GAAA,CACAL,QAAA,kBACAC,OAAA,CACAE,YAAA,OAGAG,OAAA,CACAN,QAAA,kCACAC,OAAA,CACAE,YAAA,gBAGAC,QAAA,sBACAG,QAAA,0BACAC,OAAA,2DACAC,SAAA,CACA,CACAT,QAAA,wFACAU,YAAA,GAEA,uCAEAC,SAAA,mBACAR,YAAA,kBAIAS,MAAA,CAEAZ,QAAA,mBACAC,OAAAL,EAAAC,UAAAgB,SA9CAC,EAAAC,QAAApB,EACAA,EAAAqB,YAAA,OACArB,EAAAsB,QAAA","file":"react-syntax-highlighter_languages_refractor_twig.705c6df6edeaf8a8e44c.js","sourcesContent":["'use strict'\n\nmodule.exports = twig\ntwig.displayName = 'twig'\ntwig.aliases = []\nfunction twig(Prism) {\n  Prism.languages.twig = {\n    comment: /\\{#[\\s\\S]*?#\\}/,\n    tag: {\n      pattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,\n      inside: {\n        ld: {\n          pattern: /^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,\n          inside: {\n            punctuation: /^(?:\\{\\{|\\{%)-?/,\n            keyword: /\\w+/\n          }\n        },\n        rd: {\n          pattern: /-?(?:%\\}|\\}\\})$/,\n          inside: {\n            punctuation: /.+/\n          }\n        },\n        string: {\n          pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          inside: {\n            punctuation: /^['\"]|['\"]$/\n          }\n        },\n        keyword: /\\b(?:even|if|odd)\\b/,\n        boolean: /\\b(?:true|false|null)\\b/,\n        number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n        operator: [\n          {\n            pattern: /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n            lookbehind: true\n          },\n          /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n        ],\n        property: /\\b[a-zA-Z_]\\w*\\b/,\n        punctuation: /[()\\[\\]{}:.,]/\n      }\n    },\n    // The rest can be parsed as HTML\n    other: {\n      // We want non-blank matches\n      pattern: /\\S(?:[\\s\\S]*\\S)?/,\n      inside: Prism.languages.markup\n    }\n  }\n}\n"],"sourceRoot":""}