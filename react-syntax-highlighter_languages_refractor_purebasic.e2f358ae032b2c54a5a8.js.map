{"version":3,"sources":["webpack://captchan/./node_modules/refractor/lang/purebasic.js"],"names":["purebasic","Prism","languages","extend","comment","keyword","function","number","operator","insertBefore","tag","asm","pattern","lookbehind","alias","inside","string","greedy","label","register","pbfasm","module","exports","displayName","aliases"],"mappings":"+FAKA,SAASA,EAAUC,GAQjBA,EAAMC,UAAUF,UAAYC,EAAMC,UAAUC,OAAO,QAAS,CAC1DC,QAAS,MACTC,QAAS,+7BACTC,SAAU,2BACVC,OAAQ,gDACRC,SAAU,2EAEZP,EAAMC,UAAUO,aAAa,YAAa,UAAW,CACnDC,IAAK,OACLC,IAAK,CACHC,QAAS,aACTC,YAAY,EACZC,MAAO,MACPC,OAAQ,CACNX,QAAS,MACTY,OAAQ,CACNJ,QAAS,oCACTK,QAAQ,GAGV,4BAA6B,CAC3BL,QAAS,4BACTC,YAAY,EACZC,MAAO,cAGT,4BAA6B,CAC3BF,QAAS,4CACTC,YAAY,EACZC,MAAO,cAETR,SAAU,CACRM,QAAS,+BACTC,YAAY,GAEd,kBAAmB,CACjBD,QAAS,2BACTC,YAAY,EACZC,MAAO,YAETI,MAAO,CACLN,QAAS,2CACTC,YAAY,EACZC,MAAO,cAETT,QAAS,CACP,qCACA,2BAEFc,SAAU,gHACVZ,OAAQ,gLACRC,SAAU,oCAITP,EAAMC,UAAUF,UAAU,qBAC1BC,EAAMC,UAAUF,UAAmB,QAC1CC,EAAMC,UAAUkB,OAASnB,EAAMC,UAAqB,UApEtDmB,EAAOC,QAAUtB,EACjBA,EAAUuB,YAAc,YACxBvB,EAAUwB,QAAU","file":"react-syntax-highlighter_languages_refractor_purebasic.e2f358ae032b2c54a5a8.js","sourcesContent":["'use strict'\n\nmodule.exports = purebasic\npurebasic.displayName = 'purebasic'\npurebasic.aliases = []\nfunction purebasic(Prism) {\n  /*\nOriginal Code by Bas Groothedde\n!!MANY THANKS!! I never would have made this, regex and me will never be best friends ;)\n==> https://codepen.io/ImagineProgramming/details/JYydBy/\nslightly changed to pass all tests\n*/\n  // PureBasic support, steal stuff from ansi-c\n  Prism.languages.purebasic = Prism.languages.extend('clike', {\n    comment: /;.*/,\n    keyword: /\\b(?:declarecdll|declaredll|compilerselect|compilercase|compilerdefault|compilerendselect|compilererror|enableexplicit|disableexplicit|not|and|or|xor|calldebugger|debuglevel|enabledebugger|disabledebugger|restore|read|includepath|includebinary|threaded|runtime|with|endwith|structureunion|endstructureunion|align|newlist|newmap|interface|endinterface|extends|enumeration|endenumeration|swap|foreach|continue|fakereturn|goto|gosub|return|break|module|endmodule|declaremodule|enddeclaremodule|declare|declarec|prototype|prototypec|enableasm|disableasm|dim|redim|data|datasection|enddatasection|to|procedurereturn|debug|default|case|select|endselect|as|import|endimport|importc|compilerif|compilerelse|compilerendif|compilerelseif|end|structure|endstructure|while|wend|for|next|step|if|else|elseif|endif|repeat|until|procedure|proceduredll|procedurec|procedurecdll|endprocedure|protected|shared|static|global|define|includefile|xincludefile|macro|endmacro)\\b/i,\n    function: /\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,\n    number: /(?:\\$[\\da-f]+|\\b-?\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,\n    operator: /(?:@\\*?|\\?|\\*)\\w+|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/\n  })\n  Prism.languages.insertBefore('purebasic', 'keyword', {\n    tag: /#\\w+/,\n    asm: {\n      pattern: /(^\\s*)!.*/m,\n      lookbehind: true,\n      alias: 'tag',\n      inside: {\n        comment: /;.*/,\n        string: {\n          pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          greedy: true\n        },\n        // Anonymous label references, i.e.: jmp @b\n        'label-reference-anonymous': {\n          pattern: /(\\s*!\\s*j[a-z]+\\s+)@[fb]/i,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        // Named label reference, i.e.: jne label1\n        'label-reference-addressed': {\n          pattern: /(\\s*!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        function: {\n          pattern: /^(\\s*!\\s*)[\\da-z]+(?=\\s|$)/im,\n          lookbehind: true\n        },\n        'function-inline': {\n          pattern: /(\\s*:\\s*)[\\da-z]+(?=\\s)/i,\n          lookbehind: true,\n          alias: 'function'\n        },\n        label: {\n          pattern: /^(\\s*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        keyword: [\n          /(?:extern|extern|global)[^;\\r\\n]*/i,\n          /(?:CPU|FLOAT|DEFAULT).*/\n        ],\n        register: /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s|mm\\d+)\\b/i,\n        number: /(?:\\b|-|(?=\\$))(?:0[hx][\\da-f]*\\.?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|\\d*\\.?\\d+(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n        operator: /[\\[\\]*+\\-/%<>=&|$!,.:]/\n      }\n    }\n  })\n  delete Prism.languages.purebasic['class-name']\n  delete Prism.languages.purebasic['boolean']\n  Prism.languages.pbfasm = Prism.languages['purebasic']\n}\n"],"sourceRoot":""}