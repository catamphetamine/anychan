{"version":3,"sources":["webpack:///./node_modules/refractor/lang/r.js"],"names":["r","Prism","languages","comment","string","pattern","greedy","percent-operator","alias","boolean","ellipsis","number","keyword","operator","punctuation","module","exports","displayName","aliases"],"mappings":"6FAKA,SAAAA,EAAAC,GACAA,EAAAC,UAAAF,EAAA,CACAG,QAAA,MACAC,OAAA,CACAC,QAAA,mCACAC,QAAA,GAEAC,mBAAA,CAGAF,QAAA,YACAG,MAAA,YAEAC,QAAA,qBACAC,SAAA,iBACAC,OAAA,CACA,kBACA,6EAEAC,QAAA,iHACAC,SAAA,qDACAC,YAAA,gBAxBAC,EAAAC,QAAAhB,EACAA,EAAAiB,YAAA,IACAjB,EAAAkB,QAAA","file":"react-syntax-highlighter_languages_refractor_r.719e85acffa8b3b8bde1.js","sourcesContent":["'use strict'\n\nmodule.exports = r\nr.displayName = 'r'\nr.aliases = []\nfunction r(Prism) {\n  Prism.languages.r = {\n    comment: /#.*/,\n    string: {\n      pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'percent-operator': {\n      // Includes user-defined operators\n      // and %%, %*%, %/%, %in%, %o%, %x%\n      pattern: /%[^%\\s]*%/,\n      alias: 'operator'\n    },\n    boolean: /\\b(?:TRUE|FALSE)\\b/,\n    ellipsis: /\\.\\.(?:\\.|\\d+)/,\n    number: [\n      /\\b(?:NaN|Inf)\\b/,\n      /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/\n    ],\n    keyword: /\\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\\b/,\n    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n    punctuation: /[(){}\\[\\],;]/\n  }\n}\n"],"sourceRoot":""}