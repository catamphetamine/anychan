{"version":3,"sources":["webpack:///./node_modules/refractor/lang/xeora.js"],"names":["xeora","Prism","languages","extend","constant","pattern","inside","punctuation","variable","operator","function-inline","alias","function-block","directive-inline","tag","directive-block-open","attribute","directive-block-separator","directive-block-close","insertBefore","xeoracube","module","exports","displayName","aliases"],"mappings":"6FAKA,SAAAA,EAAAC,IACG,SAAAA,GACHA,EAAAC,UAAAF,MAAAC,EAAAC,UAAAC,OAAA,UACAC,SAAA,CACAC,QAAA,4CACAC,OAAA,CACAC,YAAA,CACAF,QAAA,QAIAG,SAAA,CACAH,QAAA,+BACAC,OAAA,CACAC,YAAA,CACAF,QAAA,QAEAI,SAAA,CACAJ,QAAA,kBAIAK,kBAAA,CACAL,QAAA,0GACAC,OAAA,CACAE,SAAA,CACAH,QAAA,mCACAC,OAAA,CACAC,YAAA,CACAF,QAAA,SAEAI,SAAA,CACAJ,QAAA,kBAIAE,YAAA,CACAF,QAAA,mBAGAM,MAAA,YAEAC,iBAAA,CACAP,QAAA,gHACAC,OAAA,CACAC,YAAA,CACAF,QAAA,eAGAM,MAAA,YAEAE,mBAAA,CACAR,QAAA,8CACAC,OAAA,CACAC,YAAA,CACAF,QAAA,iCACAC,OAAA,CACAQ,IAAA,CACAT,QAAA,UAKAM,MAAA,YAEAI,uBAAA,CACAV,QAAA,8DACAC,OAAA,CACAC,YAAA,CACAF,QAAA,iCACAC,OAAA,CACAQ,IAAA,CACAT,QAAA,SAIAW,UAAA,CACAX,QAAA,WACAC,OAAA,CACAC,YAAA,CACAF,QAAA,MAGAM,MAAA,YAGAA,MAAA,YAEAM,4BAAA,CACAZ,QAAA,cACAC,OAAA,CACAC,YAAA,CACAF,QAAA,UAGAM,MAAA,YAEAO,wBAAA,CACAb,QAAA,cACAC,OAAA,CACAC,YAAA,CACAF,QAAA,WAGAM,MAAA,cAGAV,EAAAC,UAAAiB,aACA,SACA,cACA,CACAX,SAAAP,EAAAC,UAAAF,MAAA,mBAAAM,OAAA,UAEAL,EAAAC,UAAAF,MAAA,mBAEAC,EAAAC,UAAAkB,UAAAnB,EAAAC,UAAAF,MAlHG,CAmHAC,GAvHHoB,EAAAC,QAAAtB,EACAA,EAAAuB,YAAA,QACAvB,EAAAwB,QAAA","file":"react-syntax-highlighter_languages_refractor_xeora.4bc2aa75d57bb872866d.js","sourcesContent":["'use strict'\n\nmodule.exports = xeora\nxeora.displayName = 'xeora'\nxeora.aliases = ['xeoracube']\nfunction xeora(Prism) {\n  ;(function(Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern: /\\$XF:{[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern: /\\$\\w+:{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\w.]+:{(![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /}:[-\\w.]+:{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        variable: Prism.languages.xeora['function-inline'].inside['variable']\n      },\n      Prism.languages.xeora['function-block']\n    )\n    Prism.languages.xeoracube = Prism.languages.xeora\n  })(Prism)\n}\n"],"sourceRoot":""}