{"version":3,"sources":["webpack://captchan/./node_modules/refractor/lang/tap.js","webpack://captchan/./node_modules/refractor/lang/yaml.js"],"names":["refractorYaml","tap","Prism","register","languages","fail","pass","pragma","bailout","version","plan","subtest","pattern","greedy","punctuation","directive","yamlish","lookbehind","inside","yaml","alias","module","exports","displayName","aliases","anchorOrAlias","tag","properties","source","plainKey","replace","string","createValuePattern","value","flags","RegExp","scalar","comment","key","datetime","boolean","null","number","important","yml"],"mappings":"0GACA,IAAIA,EAAgB,EAAQ,OAI5B,SAASC,EAAIC,GACXA,EAAMC,SAASH,GACfE,EAAME,UAAUH,IAAM,CACpBI,KAAM,mBACNC,KAAM,eACNC,OAAQ,oBACRC,QAAS,eACTC,QAAS,mBACTC,KAAM,uBACNC,QAAS,CACPC,QAAS,qBACTC,QAAQ,GAEVC,YAAa,OACbC,UAAW,MACXC,QAAS,CACPJ,QAAS,2CACTK,YAAY,EACZC,OAAQhB,EAAME,UAAUe,KACxBC,MAAO,kBAtBbC,EAAOC,QAAUrB,EACjBA,EAAIsB,YAAc,MAClBtB,EAAIuB,QAAU,I,uBCCd,SAASL,EAAKjB,IACX,SAAWA,GAGV,IAAIuB,EAAgB,mBAChBC,EAAM,mFACNC,EACF,MACAD,EAAIE,OACJ,YACAH,EAAcG,OACd,MACAH,EAAcG,OACd,YACAF,EAAIE,OACJ,MAGEC,EAAW,kJAAkJD,OAAOE,QACtK,YACA,WACE,MAAO,2EACJF,UAGHG,EAAS,8CAA8CH,OAO3D,SAASI,EAAmBC,EAAOC,GACjCA,GAASA,GAAS,IAAIJ,QAAQ,KAAM,IAAM,IAC1C,IAAIlB,EAAU,uFAAuFgB,OAClGE,QAAQ,aAAa,WACpB,OAAOH,KAERG,QAAQ,cAAc,WACrB,OAAOG,KAEX,OAAOE,OAAOvB,EAASsB,GAEzBhC,EAAME,UAAUe,KAAO,CACrBiB,OAAQ,CACNxB,QAASuB,OACP,6FAA6FP,OAAOE,QAClG,aACA,WACE,OAAOH,MAIbV,YAAY,EACZG,MAAO,UAETiB,QAAS,MACTC,IAAK,CACH1B,QAASuB,OACP,kEAAkEP,OAC/DE,QAAQ,aAAa,WACpB,OAAOH,KAERG,QAAQ,YAAY,WACnB,MAAO,MAAQD,EAAW,IAAME,EAAS,QAG/Cd,YAAY,EACZJ,QAAQ,EACRO,MAAO,UAETL,UAAW,CACTH,QAAS,gBACTK,YAAY,EACZG,MAAO,aAETmB,SAAU,CACR3B,QAASoB,EACP,sJACGJ,QAELX,YAAY,EACZG,MAAO,UAEToB,QAAS,CACP5B,QAASoB,EAAmB,aAAaJ,OAAQ,KACjDX,YAAY,EACZG,MAAO,aAETqB,KAAM,CACJ7B,QAASoB,EAAmB,SAASJ,OAAQ,KAC7CX,YAAY,EACZG,MAAO,aAETW,OAAQ,CACNnB,QAASoB,EAAmBD,GAC5Bd,YAAY,EACZJ,QAAQ,GAEV6B,OAAQ,CACN9B,QAASoB,EACP,kFACGJ,OACH,KAEFX,YAAY,GAEdS,IAAKA,EACLiB,UAAWlB,EACXX,YAAa,6BAEfZ,EAAME,UAAUwC,IAAM1C,EAAME,UAAUe,KA9GvC,CA+GEjB,GAnHLmB,EAAOC,QAAUH,EACjBA,EAAKI,YAAc,OACnBJ,EAAKK,QAAU,CAAC","file":"react-syntax-highlighter_languages_refractor_tap.cc2fa155ae0657ae4d84.js","sourcesContent":["'use strict'\nvar refractorYaml = require('./yaml.js')\nmodule.exports = tap\ntap.displayName = 'tap'\ntap.aliases = []\nfunction tap(Prism) {\n  Prism.register(refractorYaml)\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[ \\t]*)---[\\s\\S]*?[\\r\\n][ \\t]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = yaml\nyaml.displayName = 'yaml'\nyaml.aliases = ['yml']\nfunction yaml(Prism) {\n  ;(function (Prism) {\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/ // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n    var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/ // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n    var properties =\n      '(?:' +\n      tag.source +\n      '(?:[ \\t]+' +\n      anchorOrAlias.source +\n      ')?|' +\n      anchorOrAlias.source +\n      '(?:[ \\t]+' +\n      tag.source +\n      ')?)' // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n    // This is a simplified version that doesn't support \"#\" and multiline keys\n    // All these long scarry character classes are simplified versions of YAML's characters\n    var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(\n      /<PLAIN>/g,\n      function () {\n        return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/\n          .source\n      }\n    )\n    var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source\n    /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function createValuePattern(value, flags) {\n      flags = (flags || '').replace(/m/g, '') + 'm' // add m flag\n      var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|]|}|(?:[\\r\\n]\\s*)?#))/.source\n        .replace(/<<prop>>/g, function () {\n          return properties\n        })\n        .replace(/<<value>>/g, function () {\n          return value\n        })\n      return RegExp(pattern, flags)\n    }\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: RegExp(\n          /([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(\n            /<<prop>>/g,\n            function () {\n              return properties\n            }\n          )\n        ),\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: RegExp(\n          /((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source\n            .replace(/<<prop>>/g, function () {\n              return properties\n            })\n            .replace(/<<key>>/g, function () {\n              return '(?:' + plainKey + '|' + string + ')'\n            })\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: createValuePattern(\n          /\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/\n            .source\n        ),\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: createValuePattern(/true|false/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: createValuePattern(/null|~/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        pattern: createValuePattern(string),\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: createValuePattern(\n          /[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      tag: tag,\n      important: anchorOrAlias,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    }\n    Prism.languages.yml = Prism.languages.yaml\n  })(Prism)\n}\n"],"sourceRoot":""}